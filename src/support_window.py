import sys
from PyQt5.QtWidgets import (QApplication, QWidget, QVBoxLayout, QHBoxLayout, 
                             QLabel, QPushButton, QFrame, QScrollArea, QSpacerItem, QSizePolicy)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QFont, QPixmap, QIcon
import webbrowser
from pathlib import Path

class SupportWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        """Configurar la interfaz de usuario moderna"""
        self.setWindowTitle('üíñ ¬°Quiero aportar a VESPY!')
        self.setFixedSize(550, 700)
        self.setWindowFlags(Qt.Window | Qt.WindowCloseButtonHint)
        
        # Aplicar estilo moderno
        self.setStyleSheet(self.get_modern_style())
        
        # Layout principal
        main_layout = QVBoxLayout()
        main_layout.setSpacing(0)
        main_layout.setContentsMargins(0, 0, 0, 0)
        
        # Header
        self.create_header(main_layout)
        
        # Contenido principal con scroll
        self.create_content(main_layout)
        
        # Footer con botones de acci√≥n
        self.create_footer(main_layout)
        
        self.setLayout(main_layout)
        self.center_window()

    def get_modern_style(self):
        """Estilo moderno para la ventana de soporte"""
        return """
        QWidget {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #667eea, stop: 1 #764ba2);
            color: white;
            font-family: 'Segoe UI', Arial, sans-serif;
        }
        
        #headerFrame {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #4facfe, stop: 1 #00f2fe);
            border: none;
            padding: 20px;
        }
        
        #contentFrame {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #ffffff, stop: 1 #f8f9fa);
            border: none;
            border-radius: 15px;
            margin: 10px;
            padding: 20px;
        }
        
        #footerFrame {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #ff9a9e, stop: 1 #fecfef);
            border: none;
            padding: 15px;
        }
        
        #titleLabel {
            font-size: 24px;
            font-weight: bold;
            color: white;
            margin: 10px 0;
        }
        
        #subtitleLabel {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 10px;
        }
        
        #contentLabel {
            color: #343a40;
            font-size: 13px;
            line-height: 1.6;
            background: transparent;
        }
        
        QPushButton {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #667eea, stop: 1 #764ba2);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            font-weight: bold;
            font-size: 13px;
            min-width: 120px;
            margin: 5px;
        }
        
        QPushButton:hover {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #7c3aed, stop: 1 #8b5cf6);
            transform: translateY(-2px);
        }
        
        QPushButton:pressed {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #5b21b6, stop: 1 #6d28d9);
        }
        
        QPushButton#patreonButton {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #ff424d, stop: 1 #ff6b35);
            font-size: 16px;
            padding: 15px 25px;
            min-width: 200px;
        }
        
        QPushButton#patreonButton:hover {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #ff6b35, stop: 1 #f7931e);
        }
        
        QPushButton#youtubeButton {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #ff0000, stop: 1 #cc0000);
        }
        
        QPushButton#twitchButton {
            background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #9146ff, stop: 1 #772ce8);
        }
        
        QScrollArea {
            border: none;
            background: transparent;
        }
        
        QFrame#separator {
            background-color: rgba(255, 255, 255, 0.3);
            max-height: 2px;
            margin: 10px 20px;
        }
        """

    def create_header(self, layout):
        """Crear el header de la ventana"""
        header_frame = QFrame()
        header_frame.setObjectName("headerFrame")
        header_layout = QVBoxLayout(header_frame)
        
        # Emoji grande
        emoji_label = QLabel("ÔøΩ")
        emoji_label.setAlignment(Qt.AlignCenter)
        emoji_label.setStyleSheet("font-size: 48px; margin: 10px;")
        header_layout.addWidget(emoji_label)
        
        # T√≠tulo
        title_label = QLabel("¬°Apoya el desarrollo de VESPY!")
        title_label.setObjectName("titleLabel")
        title_label.setAlignment(Qt.AlignCenter)
        header_layout.addWidget(title_label)
        
        # Subt√≠tulo
        subtitle_label = QLabel("Tu contribuci√≥n hace posible que esta herramienta siga mejorando")
        subtitle_label.setObjectName("subtitleLabel")
        subtitle_label.setAlignment(Qt.AlignCenter)
        subtitle_label.setWordWrap(True)
        header_layout.addWidget(subtitle_label)
        
        layout.addWidget(header_frame)

    def create_content(self, layout):
        """Crear el contenido principal"""
        content_frame = QFrame()
        content_frame.setObjectName("contentFrame")
        content_layout = QVBoxLayout(content_frame)
        
        # Crear √°rea de scroll para el contenido
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        
        scroll_widget = QWidget()
        scroll_layout = QVBoxLayout(scroll_widget)
        
        # Mensaje principal
        message = self.get_support_message()
        content_label = QLabel(message)
        content_label.setObjectName("contentLabel")
        content_label.setWordWrap(True)
        content_label.setTextFormat(Qt.RichText)
        content_label.setAlignment(Qt.AlignLeft)
        scroll_layout.addWidget(content_label)
        
        # Informaci√≥n del autor
        author_info = self.get_author_info()
        author_label = QLabel(author_info)
        author_label.setObjectName("contentLabel")
        author_label.setWordWrap(True)
        author_label.setTextFormat(Qt.RichText)
        author_label.setAlignment(Qt.AlignLeft)
        scroll_layout.addWidget(author_label)
        
        scroll_area.setWidget(scroll_widget)
        content_layout.addWidget(scroll_area)
        
        layout.addWidget(content_frame)

    def create_footer(self, layout):
        """Crear el footer con botones de acci√≥n"""
        footer_frame = QFrame()
        footer_frame.setObjectName("footerFrame")
        footer_layout = QVBoxLayout(footer_frame)
        
        # Bot√≥n principal de Patreon
        patreon_button = QPushButton('üåü √önete a mi Patreon')
        patreon_button.setObjectName("patreonButton")
        patreon_button.setToolTip("Apoya el proyecto con una contribuci√≥n mensual")
        patreon_button.clicked.connect(lambda: self.open_link("https://www.patreon.com/chemitas"))
        footer_layout.addWidget(patreon_button)
        
        # Separador
        separator = QFrame()
        separator.setObjectName("separator")
        separator.setFrameShape(QFrame.HLine)
        footer_layout.addWidget(separator)
        
        # Botones de redes sociales
        social_layout = QHBoxLayout()
        social_layout.setSpacing(10)
        
        youtube_button = QPushButton('üì∫ YouTube')
        youtube_button.setObjectName("youtubeButton")
        youtube_button.setToolTip("Visita mi canal de YouTube")
        youtube_button.clicked.connect(lambda: self.open_link("https://www.youtube.com/@jomaing"))
        social_layout.addWidget(youtube_button)
        
        twitch_button = QPushButton('üéÆ Twitch')
        twitch_button.setObjectName("twitchButton")
        twitch_button.setToolTip("S√≠gueme en Twitch")
        twitch_button.clicked.connect(lambda: self.open_link("https://www.twitch.tv/chemitas96"))
        social_layout.addWidget(twitch_button)
        
        footer_layout.addLayout(social_layout)
        
        # Bot√≥n de cerrar
        close_button = QPushButton('‚ùå Cerrar')
        close_button.setToolTip("Cerrar esta ventana")
        close_button.clicked.connect(self.close)
        footer_layout.addWidget(close_button)
        
        layout.addWidget(footer_frame)

    def get_support_message(self):
        """Obtener el mensaje de soporte principal"""
        return """
        <div style="text-align: center; margin: 20px 0;">
            <h3 style="color: #667eea; margin-bottom: 15px;">üöÄ ¬øC√≥mo tu apoyo hace la diferencia?</h3>
        </div>
        
        <p><strong>VESPY es un proyecto de c√≥digo abierto</strong> desarrollado con pasi√≥n para la comunidad geof√≠sica. 
        Tu apoyo me permite:</p>
        
        <ul style="line-height: 1.8; margin: 15px 0;">
            <li>üîß <strong>Mantener y mejorar VESPY</strong> con nuevas caracter√≠sticas</li>
            <li>üìö <strong>Crear tutoriales y documentaci√≥n</strong> detallada</li>
            <li>üêõ <strong>Corregir errores</strong> y optimizar el rendimiento</li>
            <li>üí° <strong>Desarrollar nuevas herramientas</strong> para geof√≠sica</li>
            <li>üéì <strong>Compartir conocimientos</strong> en YouTube y Twitch</li>
        </ul>
        
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                    color: white; padding: 15px; border-radius: 10px; margin: 20px 0;">
            <h4 style="margin: 0 0 10px 0;">üíé Niveles de Patrocinio:</h4>
            <p style="margin: 5px 0;"><strong>‚òï Caf√© Geof√≠sico ($3/mes)</strong><br>
            ‚Ä¢ Acceso a actualizaciones exclusivas<br>
            ‚Ä¢ Agradecimiento en redes sociales</p>
            
            <p style="margin: 5px 0;"><strong>üì° Explorador de Ondas ($5/mes)</strong><br>
            ‚Ä¢ Todo lo anterior + acceso anticipado a tutoriales<br>
            ‚Ä¢ Participaci√≥n en decisiones de futuros proyectos</p>
            
            <p style="margin: 5px 0;"><strong>üåç Maestro de Fourier ($10/mes)</strong><br>
            ‚Ä¢ Todo lo anterior + sesiones Q&A mensuales<br>
            ‚Ä¢ Cr√©ditos especiales en los proyectos</p>
        </div>
        """

    def get_author_info(self):
        """Obtener informaci√≥n del autor"""
        return """
        <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; 
                    border-left: 4px solid #667eea; margin: 20px 0;">
            <h4 style="color: #667eea; margin: 0 0 10px 0;">üë®‚Äçüî¨ Sobre el Autor</h4>
            <p><strong>Soy un ingeniero geof√≠sico apasionado</strong> por el an√°lisis de datos, 
            la estad√≠stica, Python y el software de c√≥digo abierto.</p>
            
            <p>Mi misi√≥n es <strong>democratizar las herramientas geof√≠sicas</strong> y hacer que 
            sean accesibles para estudiantes, profesionales e investigadores en todo el mundo.</p>
            
            <p style="margin: 15px 0 5px 0;"><strong>üéØ Mis objetivos:</strong></p>
            <ul style="margin: 5px 0;">
                <li>Crear software geof√≠sico de calidad profesional</li>
                <li>Educar a trav√©s de contenido en YouTube y Twitch</li>
                <li>Fomentar la comunidad de c√≥digo abierto en geof√≠sica</li>
                <li>Hacer la ciencia m√°s accesible y divertida</li>
            </ul>
        </div>
        
        <p style="text-align: center; font-size: 16px; color: #667eea; margin: 20px 0;">
            <strong>¬°Juntos podemos hacer que VESPY sea a√∫n mejor! üåü</strong>
        </p>
        """

    def center_window(self):
        """Centrar la ventana en la pantalla"""
        from PyQt5.QtWidgets import QDesktopWidget
        qr = self.frameGeometry()
        cp = QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        self.move(qr.topLeft())

    def open_link(self, url):
        """Abrir enlace en el navegador"""
        webbrowser.open(url)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = SupportWindow()
    window.show()
    sys.exit(app.exec_())